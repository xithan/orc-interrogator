@page "/overview"
@page "/analysis"
@page "/fastrun/{Prison}"
@page "/fastrun"

@inject HttpClient Http;
@inject IJSRuntime JsRuntime;
@using Interrogator.Game
@using Interrogator.Shared.Charts
@using Round = Interrogator.Game.Round
@using Interrogator.Game.Setup

@if (PrisonManager.IsGameFinished)
{
    <Card Title="Worst Traitor">
        <TraitorChart/>
    </Card>
    
    <Card Title="Sentence received from each duel">
       <SentenceTable/>
        <SentenceBarChart/>
    </Card>
    
    <Card Title="History">
        <div class="compact text-dark">
            @if (PrisonManager.Rounds != null)
            {
                @foreach (var round in @PrisonManager.Rounds)
                {
                    <Round RoundData="round"/>
                }
            }
        </div>
    </Card>
}

@code {
    protected override async Task OnInitializedAsync()
    {
        Console.WriteLine(Navigation.Uri);
        if (Navigation.Uri.Contains("fastrun"))
        {
            var prison = await Loader.LoadPrison(this.Prison);
            this.PrisonManager.InitializeNewGame(prison);
            this.PrisonManager.FastRun();
        }
        await base.OnInitializedAsync();
    }

    [Inject] 
    public Loader Loader { get; set; }
    
    [Inject]
    public NavigationManager Navigation { get; set; }

    private int Height => PrisonManager.ActivePrison.Prisoners.Count * PrisonManager.ActivePrison.Prisoners.Count * 20;
    
    [Inject] 
    private PrisonManager PrisonManager { get; set; }
    
    [Parameter]
    public int RoundId { get; set; }
    
    [Parameter]
    public string Prison { get; set; }

}