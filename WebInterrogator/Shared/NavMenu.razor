@using Interrogator.Game
@using Interrogator.Game.Setup
@using System.Collections
<div class="offcanvas offcanvas-end" tabindex="-1" id="offcanvasExample" aria-labelledby="offcanvasExampleLabel">
    <div class="offcanvas-header">
        <h5 class="offcanvas-title" id="offcanvasNavbarLabel">Orc Interrogator</h5>
        <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body">
        <ul class="navbar-nav justify-content-end flex-grow-1 pe-3">
            <li class="nav-item">
                <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                    <span class="oi oi-home" aria-hidden="true"></span> Start
                </NavLink>
            </li>
            <li class="nav-item">
                <NavLink class="nav-link" href="fastrun">
                    <span class="oi oi-media-skip-forward" aria-hidden="true"></span> Fast Forward
                </NavLink>
            </li>
            <li class="nav-item">
                <NavLink class="nav-link" @onclick="TestRun">
                    <span class="oi oi-beaker" aria-hidden="true"></span> Test Run
                </NavLink>
            </li>
            <li class="nav-item">
                <NavLink class="nav-link" href="overview">
                    <span class="oi oi-list" aria-hidden="true"></span> Analysis
                </NavLink>
            </li>
        </ul>
        @if (ActivePrison != null)
        {
            <h6 class="navbar-text">Ranking</h6>
            <Ranking Prisoners="@PrisonManager.ActivePrison.Prisoners"></Ranking>  
        }
            
        <h6 class="navbar-text">Configuration</h6>
         @if (ActivePrison != null)
                {
                    <Config Prison="@PrisonManager.ActivePrison"></Config>  
                }
        <form class="d-flex">
            <select class="custom-select" placeholder="Prison" @bind="PrisonToLoad">
                <option selected>Select Prison</option>
                @foreach (var (value, name) in PrisonManager.Prisons)
                {
                    <option value="@value">@name</option>
                }
            </select>
            <button @onclick="Load" class="btn btn-outline-primary ms-3">Load</button>
        </form>
    </div>
</div>


@code {
    protected override Task OnInitializedAsync()
    {
        PrisonManager.PrisonChanged += (obj) => StateHasChanged();
        return base.OnInitializedAsync();
    }

    private Prison ActivePrison => this.PrisonManager.ActivePrison;

    private string PrisonToLoad { get; set; }
    
    [Inject] 
    private PrisonManager PrisonManager { get; set; }
    
    [Inject] 
    private Loader Loader { get; set; }

    [Inject]
    private NavigationManager Navigation { get; set; }
    
    private async void Load()
    {
        Console.WriteLine(Selected);
        Console.WriteLine(PrisonToLoad);
        Navigation.NavigateTo($"prison/{this.PrisonToLoad}");
    }

    private void TestRun()
    {
        var pseudonym = new Dictionary<string, string>();
        this.PrisonManager.ActivePrison.Prisoners.ForEach(p =>
        {
            p.Name = "Anonymous";
        });
        this.PrisonManager.FastRun();
    }

    public string? Selected { get; set; }

}